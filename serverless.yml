service: dynamodb-crud-api
provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: ap-south-1
  environment:
    DYNAMODB_TABLE_NAME: employee-Table
custom:
  # employee-TableName: posts-table-${self:provider.stage}
plugins:
  - serverless-iam-roles-per-function
functions:
  getEmployee:
    handler: api.getEmployee
    name: get-post
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: post/{postId}
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:GetItem"
        Resource: !GetAtt employee-Table.Arn
  createEmployee:
    handler: api.createEmployee
    name: create-post
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: post
          method: POST
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:PutItem"
        Resource: !GetAtt employee-Table.Arn
  updateEmployee:
    handler: api.updateEmployee
    name: update-post
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: post/{postId}
          method: PUT
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:UpdateItem"
        Resource: !GetAtt employee-Table.Arn
  deleteEmployee:
    handler: api.deleteEmployee
    name: delete-post
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: post/{postId}
          method: DELETE
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:DeleteItem"
        Resource: !GetAtt employee-Table.Arn
  getAllEmployee:
    handler: api.getAllEmployee
    name: get-all-posts
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: posts
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:Scan"
        Resource: !GetAtt employee-Table.Arn
resources:
  Resources:
    employee-Table:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: employee-Table
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1